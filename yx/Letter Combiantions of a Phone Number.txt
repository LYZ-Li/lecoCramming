class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        phone_map = {2:"abc",
               3:["def"],
               4:["ghj"],
               5:["jkl"],
               6:["mno"],
               7:["pqrs"],
               8:["tuv"],
               9:["wxyz"]}

        if not digits:
            return []
    

        def backtrack(combination, next_digits):
            if len(next_digits) == 0:
                output.append(combination)
            else:
                for letter in phone_map[next_digits[0]]:
                    backtrack(combination + letter, next_digits[1:])

        output = []
        
        backtrack("", digits)

        return output

        
        
复杂的嵌套循环可以考虑使用递归函数